/* tslint:disable */
export const memory: WebAssembly.Memory;
export function __wbg_cpu_free(a: number): void;
export function cpu_dump(a: number, b: number): void;
export function cpu_registers(a: number): number;
export function cpu_read(a: number, b: number): number;
export function cpu_store(a: number, b: number, c: number): void;
export function cpu_go(a: number, b: number): void;
export function cpu_step(a: number): number;
export function cpu_run_cycles(a: number, b: number): void;
export function cpu_reset(a: number): void;
export function cpu_new(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function __wbg_eeprom_free(a: number): void;
export function __wbg_get_eeprom_writable(a: number): number;
export function eeprom_read(a: number, b: number): number;
export function eeprom_store(a: number, b: number, c: number): void;
export function eeprom_lock(a: number): void;
export function eeprom_unlock(a: number): void;
export function eeprom_dump(a: number, b: number): void;
export function eeprom_new(): number;
export function keyboard_read(a: number, b: number): number;
export function keyboard_store(a: number, b: number, c: number): void;
export function keyboard_new(): number;
export function __wbindgen_global_argument_ptr(): number;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_free(a: number, b: number): void;
export function __wbg_get_registers_ix(a: number): number;
export function __wbg_get_registers_iy(a: number): number;
export function __wbg_get_registers_su(a: number): number;
export function __wbg_get_registers_ss(a: number): number;
export function __wbg_get_registers_pc(a: number): number;
export function __wbg_get_registers_aa(a: number): number;
export function __wbg_get_registers_ab(a: number): number;
export function __wbg_get_registers_dp(a: number): number;
export function __wbg_get_registers_cc(a: number): number;
export function __wbg_keyboard_free(a: number): void;
export function __wbg_pia_free(a: number): void;
export function __wbg_registers_free(a: number): void;
export function pia_read(a: number, b: number): number;
export function pia_store(a: number, b: number, c: number): void;
export function pia_new(): number;
